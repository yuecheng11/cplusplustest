写时拷贝
1，真正需要一个存储空间时才去声明变量（分配内存），保证程序在运行时最小的内存花销。
2，使用“引用计数”的技术，当第一个string类对象构造时，在堆上分配内存，引用计数初始化为1;
   当其他string对象复制刚才生成的对象时，引用计数加1,不开辟新的内存空间，当对象析构时，
   引用计数减1,直到最后一个对象析构时，程序才释放内存。
   当用一个对象构造自己（调用拷贝构造函数），对象赋值（调用赋值运算符）才会用到共享
   内存（例如String 类）。

例如：
	string s1 = "hello";
        string s2 = s1;
	string s3;
	s3 = s2;

	string w1 = "world";
	string w2 = "";
	w2 = w1;
解析：s1,s2,s3共享同一块内存，w1,w2共享同一块内存。

解决方案：
	当为string对象分配内存时，多分配一个空间来存储引用计数的值，只要发生拷贝或者
	赋值时候，引用计数加1。而在内容修改时，string类会查看引用计数是否为0,如果不
	为0,说明有对象在用共享内存，那么自己先做一份拷贝，然后引用计数减1,再把数据拷
	贝出来。 
